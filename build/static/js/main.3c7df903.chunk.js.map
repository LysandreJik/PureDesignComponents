{"version":3,"sources":["components/Button.tsx","components/ButtonDisplay.tsx","components/TextInput.tsx","components/TextInputDisplay.tsx","components/Modal.tsx","components/ModalDisplay.tsx","App.tsx","index.tsx"],"names":["Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","id","String","fromCharCode","Math","floor","random","Date","now","wrapperId","hover","bind","assertThisInitialized","leaveHover","paths","pathsStrings","primary","secondary","item","className","large","small","red","disabled","wave","document","getElementById","addEventListener","height","offsetHeight","width","offsetWidth","draw","SVG","push","createPath","path","fill","concat","removeEventListener","i","length","animate","duration","delay","y","randomHeight","start","end","curve","round","createLine","randomPointLeft","x","randomPointRight","_this2","react_default","a","createElement","getClassName","onClick","value","React","ButtonDisplay","style","display","flexDirection","margin","Button_Component","TextInput","type","defaultValue","TextInputDisplay","TextInput_TextInput","Modal","hide","children","TwoButtonModal","_React$Component2","apply","arguments","inherits","createClass","key","ModalDisplay","state","displayModal","setState","Modal_Modal","Modal_TwoButtonModal","App","ButtonDisplay_ButtonDisplay","TextInputDisplay_TextInputDisplay","ModalDisplay_ModalDisplay","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.3c7df903.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../css/Button.css'\r\nimport SVG from 'svg.js';\r\n\r\ninterface ButtonProps{\r\n    value: string,\r\n    large?: boolean,\r\n    small?: boolean,\r\n    red?: boolean,\r\n    disabled?: boolean,\r\n    style?: {},\r\n    onClick?: Function,\r\n    wave?: boolean\r\n}\r\n\r\nexport default class Component extends React.Component<ButtonProps>{\r\n    id: string;\r\n    wrapperId: string;\r\n    draw?: any;\r\n    paths: Array<any>;\r\n    pathsStrings: Array<{path: string, randomHeight: number}>;\r\n    primary: [number, number, number];\r\n    secondary: [number, number, number];\r\n\r\n    constructor(props: ButtonProps){\r\n        super(props);\r\n\r\n        this.id = String.fromCharCode(78 + Math.floor(Math.random() * 13)) + Date.now() + Math.random() * 10000;\r\n        this.wrapperId = String.fromCharCode(65 + Math.floor(Math.random() * 13)) + Date.now() + Math.random() * 10000;\r\n\r\n        this.hover = this.hover.bind(this);\r\n        this.leaveHover = this.leaveHover.bind(this);\r\n        \r\n        this.paths = [];\r\n        this.pathsStrings = [];\r\n\r\n        this.primary = [149, 202, 255];\r\n        this.secondary = [117, 170, 255];\r\n    }\r\n\r\n    getClassName(item: string){\r\n        let className = \"PDC__\"+item;\r\n\r\n        if(this.props.large){\r\n            className += \" PDC__\"+item+\"--large\"\r\n        }\r\n\r\n        if(this.props.small){\r\n            className +=  \" PDC__\"+item+\"--small\"\r\n        }\r\n\r\n        if(this.props.red){\r\n            className +=  \" PDC__\"+item+\"--red\"\r\n            this.secondary = [255, 102, 119];\r\n            this.primary = [255, 34, 68];\r\n        }\r\n\r\n        if(this.props.disabled){\r\n            className +=  \" PDC__\"+item+\"--disabled\"\r\n        }\r\n\r\n        if(this.props.wave){\r\n            className +=  \" PDC__\"+item+\"--wave\"\r\n        }\r\n\r\n        return className;\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        document.getElementById(this.wrapperId)!.addEventListener('mouseover', this.hover);\r\n        document.getElementById(this.wrapperId)!.addEventListener('mouseleave', this.leaveHover);\r\n\r\n        if(this.props.wave){\r\n            let height: number = document.getElementById(this.wrapperId)!.offsetHeight;\r\n            let width: number = document.getElementById(this.wrapperId)!.offsetWidth;\r\n\r\n            this.draw = SVG(this.id);\r\n\r\n            this.pathsStrings.push(this.createPath(width, height, 1/4, 1/4, true));\r\n            this.pathsStrings.push(this.createPath(width, height, 1/2, 1/4, true));\r\n\r\n            this.paths.push(this.draw.path(this.pathsStrings[0].path).fill(`rgba(${this.primary[0]}, ${this.primary[1]}, ${this.primary[2]}, 0.2)`));\r\n            this.paths.push(this.draw.path(this.pathsStrings[1].path).fill(`rgba(${this.secondary[0]}, ${this.secondary[1]}, ${this.secondary[2]}, 0.2)`));\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        document.getElementById(this.wrapperId)!.removeEventListener('mouseover', this.hover);\r\n        document.getElementById(this.wrapperId)!.removeEventListener('mouseleave', this.leaveHover);\r\n    }\r\n\r\n    hover(){\r\n        if(this.props.wave){\r\n            let height: number = document.getElementById(this.wrapperId)!.offsetHeight;\r\n            let width: number = document.getElementById(this.wrapperId)!.offsetWidth;\r\n\r\n            for(let i = 0; i < this.paths.length; i++){\r\n                this.paths[i].animate({duration: 200, delay: i*0}).y(-this.pathsStrings[i].randomHeight);\r\n            }\r\n        }\r\n  \r\n    }\r\n\r\n    leaveHover(){\r\n        if(this.props.wave){\r\n            let height: number = document.getElementById(this.wrapperId)!.offsetHeight;\r\n            let width: number = document.getElementById(this.wrapperId)!.offsetWidth;\r\n\r\n            for(let i = 0; i < this.paths.length; i++){\r\n                this.paths[i].animate({duration: 200, delay: i*0}).y(this.pathsStrings[i].randomHeight);\r\n            }\r\n        }\r\n    }\r\n\r\n    createPath(width: number, height: number, start: number, end: number, curve: boolean): {path: string, randomHeight: number}{\r\n        let path = \"M \";\r\n\r\n        \r\n        let randomHeight = Math.round(height * start + Math.random() * (height * end));\r\n\r\n        path += \"0 \" + height*3 + \" \";\r\n        path += this.createLine(0, randomHeight);\r\n\r\n        let randomPointLeft = {x: Math.round(Math.random() * width / 2), y: Math.round(randomHeight + 10 * (Math.round(Math.random()) - 0.5))};\r\n        let randomPointRight = {x: Math.round(width/2 + Math.random() * width / 2), y: Math.round(randomHeight + 10 * (Math.round(Math.random()) - 0.5))};\r\n\r\n        path += this.createLine(randomPointLeft.x, randomPointLeft.y);\r\n        path += this.createLine(randomPointRight.x, randomPointRight.y);\r\n\r\n        path += this.createLine(width, randomHeight);\r\n        path += this.createLine(width, randomHeight);\r\n        path += this.createLine(width, height*3);\r\n        path += \"Z\";\r\n\r\n        return {path: path, randomHeight};\r\n    }\r\n\r\n    createLine(x: number, y: number): string{\r\n        return \"L \" + x + \" \" +y + \" \"\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={this.getClassName('ButtonWrapper')} id={this.wrapperId} onClick={() => {this.props.onClick ? this.props.onClick() : \"\"}}>\r\n                {this.props.wave ? <div id={this.id} className=\"PDC__ButtonSVG\"></div> : \"\"}\r\n                <button className={this.getClassName('Button')}>{this.props.value}</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Button from './Button';\r\n\r\nexport default class ButtonDisplay extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div style={{display: \"flex\", flexDirection: \"row\"}}>\r\n                <div style={{margin: \"20px\"}}>\r\n                    Large button <i>{\"<Button value={'Button'} large/>\"}</i>\r\n                    <Button value={\"Button\"} large/>\r\n                    Medium button <i>{\"<Button value={'Button'}/>\"}</i>\r\n                    <Button value={\"Button\"} />\r\n                    Small button <i>{\"<Button value={'Button'} small/>\"}</i>\r\n                    <Button value={\"Button\"} small/>\r\n                    <br/>\r\n                    <br/>\r\n                    Large button <i>{\"<Button value={'Button'} large wave/>\"}</i>\r\n                    <Button value={\"Button\"} large wave/>\r\n                    Medium button <i>{\"<Button value={'Button'} wave/>\"}</i>\r\n                    <Button value={\"Button\"} wave/>\r\n                    Small button <i>{\"<Button value={'Button'} small wave/>\"}</i>\r\n                    <Button value={\"Button\"} small wave/>\r\n                </div>\r\n\r\n                 <div style={{margin: \"20px\"}}>\r\n                    Large red button <i>{\"<Button value={'Button'} red large/>\"}</i>\r\n                    <Button value={\"Button\"} red large/>\r\n                    Medium red button <i>{\"<Button value={'Button'} red/>\"}</i>\r\n                    <Button value={\"Button\"} red/>\r\n                    Small red button <i>{\"<Button value={'Button'} red small/>\"}</i>\r\n                    <Button value={\"Button\"} red small/>\r\n                    <br/>\r\n                    <br/>\r\n                    Large button <i>{\"<Button value={'Button'} red large wave/>\"}</i>\r\n                    <Button value={\"Button\"} red large wave/>\r\n                    Medium button <i>{\"<Button value={'Button'} red wave/>\"}</i>\r\n                    <Button value={\"Button\"} red wave/>\r\n                    Small button <i>{\"<Button value={'Button'} red small wave/>\"}</i>\r\n                    <Button value={\"Button\"} red small wave/>\r\n                </div>\r\n\r\n                <div style={{margin: \"20px\"}}>\r\n                    Large disabled button <i>{\"<Button value={'Button'} disabled large/>\"}</i>\r\n                    <Button value={\"Button\"} disabled large/>\r\n                    Medium disabled button <i>{\"<Button value={'Button'} disabled/>\"}</i>\r\n                    <Button value={\"Button\"} disabled/>\r\n                    Small disabled button <i>{\"<Button value={'Button'} disabled small/>\"}</i>\r\n                    <Button value={\"Button\"} disabled small/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport '../css/TextInput.css'\r\n\r\ninterface TextInputProps{\r\n    large?: boolean,\r\n    small?: boolean,\r\n    red?: boolean,\r\n    disabled?: boolean,\r\n    style?: {},\r\n}\r\n\r\nexport default class TextInput extends React.Component<TextInputProps>{\r\n\r\n    getClassName(item: string){\r\n        let className = \"PDC__\"+item;\r\n\r\n        if(this.props.large){\r\n            className += \" PDC__\"+item+\"--large\"\r\n        }\r\n\r\n        if(this.props.small){\r\n            className +=  \" PDC__\"+item+\"--small\"\r\n        }\r\n\r\n        if(this.props.red){\r\n            className +=  \" PDC__\"+item+\"--red\"\r\n        }\r\n\r\n        if(this.props.disabled){\r\n            className +=  \" PDC__\"+item+\"--disabled\"\r\n        }\r\n\r\n        return className;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"PDC__TextInputWrapper\">\r\n                <input type='text' style={this.props.style} className={this.getClassName(\"TextInput\")} defaultValue=\"Default input\"/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport TextInput from \"./TextInput\";\r\n\r\nexport default class TextInputDisplay extends React.Component{\r\n    render(){\r\n        return(\r\n            <div style={{display: \"flex\", flexDirection: \"row\"}}>\r\n                <div style={{margin: \"20px\"}}>\r\n                    Large text input <i>{\"<TextInput large/>\"}</i>\r\n                    <TextInput large/>\r\n                    Medium text input <i>{\"<TextInput/>\"}</i>\r\n                    <TextInput/>\r\n                    Small text input <i>{\"<TextInput small/>\"}</i>\r\n                    <TextInput small/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport '../css/Modal.css';\r\nimport TextInput from './TextInput';\r\nimport Button from './Button'\r\n\r\ninterface ModalProps{\r\n    hide: Function\r\n}\r\n\r\n\r\nexport default class Modal extends React.Component<ModalProps>{\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"PDC__Modal\" onClick={() => this.props.hide()}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class TwoButtonModal extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <TextInput/>\r\n                <div style={{display: \"flex\", flexDirection: \"row\"}}>\r\n                    <Button value={\"Ok\"}/>\r\n                    <Button value={\"Cancel\"}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Button from './Button'\r\nimport Modal, {TwoButtonModal} from './Modal';\r\n\r\nexport default class ModalDisplay extends React.Component{\r\n\r\n    state = {displayModal: false};\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button value={\"Open modal\"} onClick={() => this.setState({displayModal: true})} red wave/>\r\n                {this.state.displayModal ? <Modal hide={() => this.setState({displayModal: false})}><TwoButtonModal/></Modal> : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport ButtonDisplay from './components/ButtonDisplay';\nimport './css/app.css';\nimport TextInputDisplay from './components/TextInputDisplay';\nimport ModalDisplay from './components/ModalDisplay';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Buttons</h1>\n\t\t\t\t<ButtonDisplay/>\n\t\t\t\t<h1>Text inputs</h1>\n\t\t\t\t<TextInputDisplay/>\n\t\t\t\t<h1>Modal</h1>\n\t\t\t\t<ModalDisplay/>\n      \t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}